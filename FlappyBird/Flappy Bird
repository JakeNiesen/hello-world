<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Game Engine</title>

    <style type="text/css">
        #square {
            background-color: black;
            color: white;

            left: 60px;
            top: 225px;

            width: 75px;
            height: 75px;

            z-index: 100;

            position: absolute;
        }

        .wall1 {
            background-color: blue;
            color: white;

            left: 0px;
            top: 0px;

            width: 25px;
            height: 500px;

            position: absolute;
        }

        .wall2 {
            background-color: blue;
            color: white;

            left: 0px;
            top: 500px;

            width: 600px;
            height: 25px;

            position: absolute;
        }

        .wall3 {
            background-color: blue;
            color: white;

            left: 0px;
            top: 0px;

            width: 600px;
            height: 25px;

            position: absolute;
        }

        .wall4 {
            background-color: blue;
            color: white;

            left: 600px;
            top: 0px;

            width: 25px;
            height: 525px;

            position: absolute;
        }

        .mwall1 {
            background-color: green;
            color: white;

            right: 0px;
            top: -16px;

            width: 40px;
            height: 200px;

            z-index: -1;

            position: relative;
        }

        .mwall2 {
            background-color: green;
            color: white;

            right: 0px;
            bottom: -93px;

            width: 40px;
            height: 200px;

            z-index: -1;

            position: relative;
        }

        .bg {
            background-color: skyblue;
            color: white;

            left: 25px;
            top: 25px;

            width: 600px;
            height: 475px;

            z-index: -10;

            position: absolute;
        }
    </style>
</head>

<body id="body">

    <div id="walls">


        <img class="game-object" id="square" src="Birb.gif">

        <div class=wall1 id="wall1">
        </div>

        <div class="wall2" id="wall2">
        </div>

        <div class="wall3" id="wall3">
        </div>

        <div class="wall4" id="wall4">
        </div>



        <div class="mwall1" id="mwall1">
        </div>

        <div class="mwall2" id="mwall2">
        </div>

    </div>

    <div class="bg" id="bg">
    </div>


    <script type="text/javascript">
        var speed = 25;
        var framecount = 0;

        //var mwall1RightPosition = 0;
        var mwall1TopPosition = 0;

        //var mwall2RightPosition = 0;
        var mwall2BottomPosition = 0;

        var squareNode = document.getElementById("square");
        var wall1Node = document.getElementById("wall1");
        var wall2Node = document.getElementById("wall2");
        var wall3Node = document.getElementById("wall3");
        var wall4Node = document.getElementById("wall4");
        var mwall1Node = document.getElementById("mwall1");
        var mwall2Node = document.getElementById("mwall2");

        var squareCollider = squareNode.getBoundingClientRect();
        var wall1Collider = wall1Node.getBoundingClientRect();
        var wall2Collider = wall2Node.getBoundingClientRect();
        var wall3Collider = wall3Node.getBoundingClientRect();
        var wall4Collider = wall4Node.getBoundingClientRect();
        var mwall1Collider = mwall1Node.getBoundingClientRect();
        var mwall2Collider = mwall2Node.getBoundingClientRect();

        var squareXPosition = squareCollider.left;
        var squareYPosition = squareCollider.top;

        var mwall1XPosition = mwall1Collider.right;
        var mwall1YPosition = mwall1Collider.top;

        var mwall2XPosition = mwall2Collider.right;
        var mwall2YPosition = mwall2Collider.bottom;


        var mwall1XPosition = -592;
        var mwall2XPosition = -592;
        //var mwallYPosition = 20;

        var mwall1height = 200;
        var mwall2height = 200;


        // Draws the game
        function drawFrame() {
            squareNode.style.left = squareXPosition + "px";
            squareNode.style.top = squareYPosition + "px";

            //do stuff with stuff here


            mwall1XPosition += 2;
            mwall2XPosition += 2;

            squareYPosition += .5;

            mwall1Node.style.right = mwall1XPosition + "px";
            //mwall1Node.style.top = mwall1YPosition + "px";

            mwall1Node.style.height = mwall1height + "px";
            mwall2Node.style.height = mwall2height + "px";


            //mwall2Node.style.bottom = mwall2YPosition + "px";
            mwall2Node.style.right = mwall2XPosition + "px";



            if (mwall1height > 350) {
                mwall1height = 200;
                mwall2height = 200;
            } else if (mwall2height > 350) {
                mwall1height = 200;
                mwall2height = 200;
            }



        }
        drawFrame();

        function reset() {
            mwall1XPosition = -600
            mwall2XPosition = -600

            var random = Math.floor(Math.random() * 5)

            if (0 === random) {
                up20();
            } else if (1 === random) {
                down20();
            } else if (2 === random) {
                up40();
            } else if (3 === random) {
                down40();
            } else if (4 === random) {
                up100();
            } else if (5 === random) {
                down100();
            }

        }




        function up20() {
            mwall1height = mwall1height - 20
            mwall2height = mwall2height + 20
        }
        up20();

        function down20() {
            mwall1height = mwall1height + 20
            mwall2height = mwall2height - 20
        }
        down20();

        function up40() {
            mwall1height = mwall1height - 40
            mwall2height = mwall2height + 40
        }
        up40();

        function down40() {
            mwall1height = mwall1height + 40
            mwall2height = mwall2height - 40
        }
        down40();

        function up100() {
            mwall1height = mwall1height - 40
            mwall2height = mwall2height + 40
        }
        up100();

        function down100() {
            mwall1height = mwall1height + 40
            mwall2height = mwall2height - 40
        }
        down100();



        setInterval(drawFrame, 10);
        setInterval(reset, 3000);




        var body = document.getElementById("body");




        // Checks for collisions
        function checkCollision() {

            // Update the colliders
            squareCollider = squareNode.getBoundingClientRect();
            wallCollider1 = wall1Node.getBoundingClientRect();
            wallCollider2 = wall2Node.getBoundingClientRect();
            wallCollider3 = wall3Node.getBoundingClientRect();
            wallCollider4 = wall4Node.getBoundingClientRect();
            mwallCollider1 = mwall1Node.getBoundingClientRect();
            mwallCollider2 = mwall2Node.getBoundingClientRect();

            // Was there a collision?
            if (isCollision(squareCollider, wallCollider1)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else if (isCollision(squareCollider, wallCollider2)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else if (isCollision(squareCollider, wallCollider3)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else if (isCollision(squareCollider, wallCollider4)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else if (isCollision(squareCollider, mwallCollider1)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else if (isCollision(squareCollider, mwallCollider2)) {

                // TODO: There was a collision, so do something about it
                alert("Game Over");
                location.reload();
            } else {
              
                // TODO: There wasn't a collision, maybe do something
                squareNode.style.backgroundColor = "black";
            }


        }



        function isCollision(colliderA, colliderB) {

            var collision = false;

            if (colliderA.x < colliderB.x + colliderB.width &&
                colliderA.x + colliderA.width > colliderB.x &&
                colliderA.y < colliderB.y + colliderB.height &&
                colliderA.y + colliderA.height > colliderB.y) {
                collision = true;
            }

            return collision;
        }

        function pushAway(colliderA, colliderB) {

            if (
                Math.abs(colliderA.right - colliderB.left) <
                Math.abs(colliderA.bottom - colliderB.top) &&
                Math.abs(colliderA.right - colliderB.left) <
                Math.abs(colliderA.top - colliderB.bottom) &&
                Math.abs(colliderA.right - colliderB.left) <
                Math.abs(colliderA.left - colliderB.right)
            ) {
                squareXPosition = colliderB.left - colliderA.width - 0.1;
            } else if (
                Math.abs(colliderA.left - colliderB.right) <
                Math.abs(colliderA.bottom - colliderB.top) &&
                Math.abs(colliderA.left - colliderB.right) <
                Math.abs(colliderA.top - colliderB.bottom) &&
                Math.abs(colliderA.left - colliderB.right) <
                Math.abs(colliderA.right - colliderB.left)
            ) {
                squareXPosition = colliderB.right + 0.1;
            } else if (
                Math.abs(colliderA.top - colliderB.bottom) <
                Math.abs(colliderA.left - colliderB.right) &&
                Math.abs(colliderA.top - colliderB.bottom) <
                Math.abs(colliderA.right - colliderB.left) &&
                Math.abs(colliderA.top - colliderB.bottom) <
                Math.abs(colliderA.bottom - colliderB.top)
            ) {
                squareYPosition = colliderB.bottom + 0.1;
            } else {
                squareYPosition = colliderB.top - colliderA.height - 0.1;
            }
        }

        function onKeyDown(event) {

            if (event.key === "w" || event.key === "ArrowUp") {
                squareYPosition -= speed;
            }

            if (event.key === "space") {
                squareYPosition -= speed;
            }
            /*
            if (event.key === "s" || event.key === "ArrowDown") {
              squareYPosition += speed;
            }
        
            if (event.key === "a" || event.key === "ArrowLeft") {
              squareXPosition -= speed;
            }
        
            if (event.key === "d" || event.key === "ArrowRight") {
              squareXPosition += speed;
            }
            */
        }

        window.addEventListener("keydown", onKeyDown);

        setInterval(drawFrame, 50);
        setInterval(checkCollision, 30);
    </script>
</body>

</html>
